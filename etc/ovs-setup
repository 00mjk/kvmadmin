#! /bin/sh
### BEGIN INIT INFO
# Provides:          ovs-setup
# Required-Start:    openvswitch-switch
# Required-Stop:     
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Open VSwitch If Setup
# Description:       Open VSwitch interface setup script
### END INIT INFO

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	
	#dddstart-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \
	#	|| return 1
	#start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \
	#	$DAEMON_ARGS \
	#	|| return 2
	# Add code here, if necessary, that waits for the process to be ready
	# to handle requests from services started subsequently which depend
	# on this one.  As a last resort, sleep for some time.

	# bridge for public access
	# /sbin/ifconfig eth0 down
	/usr/bin/ovs-vsctl add-br br0
	/usr/bin/ovs-vsctl add-port br0 eth0
	/usr/bin/ovs-vsctl list port

	/sbin/ifconfig eth0 0
	/sbin/ifconfig br0 192.168.0.10 netmask 255.255.255.0
	/sbin/route add default gw 192.168.0.1 br0

	# bridge for internal networking
	/usr/bin/ovs-vsctl add-br brint
	/sbin/ifconfig brint 10.168.0.1 netmask 255.255.255.0
}

case "$1" in
  start)
	do_start
	;;
  *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: ovs-setup {start}" >&2
	exit 3
	;;
esac

:
